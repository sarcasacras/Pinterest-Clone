# Backend Environment Variables
# Copy this file to .env and fill in the actual values

# Environment Configuration (IMPORTANT: Set this first!)
NODE_ENV=development

# Server Configuration  
PORT=3000

# Frontend URL for CORS configuration
FRONTEND_URL=http://localhost:5173

# Database Configuration
# MongoDB connection string - get from MongoDB Atlas or local MongoDB
MONGO=mongodb+srv://username:password@cluster.mongodb.net/database-name?retryWrites=true&w=majority&appName=AppName

# JWT Configuration
# Generate a secure random string (at least 32 characters)
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long

# ImageKit Configuration
# Get these from https://imagekit.io/ dashboard
IMAGEKIT_PUBLIC_KEY=public_your_public_key_here
IMAGEKIT_PRIVATE_KEY=private_your_private_key_here
IMAGEKIT_URL_ENDPOINT=https://ik.imagekit.io/your_imagekit_id/

# Development Notes:
# - Never commit the actual .env file to version control
# - Use strong, unique JWT_SECRET in production
# - Consider using different databases for dev/staging/production
# - ImageKit keys should be kept secure and rotated periodically

# Production Example:
# NODE_ENV=production
# PORT=3000
# FRONTEND_URL=https://yourpinterestclone.com
# MONGO=mongodb+srv://prod-user:secure-password@prod-cluster.mongodb.net/pinterest-prod
# JWT_SECRET=very-long-secure-production-jwt-secret-64-characters-minimum

# Security Notes:
# - FRONTEND_URL is used for CORS origin validation
# - In production, only exact domain matches are allowed
# - Multiple domains can be added to allowedOrigins array in index.js
# - CORS is more restrictive in production mode

# Rate Limiting Configuration:
# - READ Operations (GET): 5000 requests per 15 minutes per IP (generous for browsing)
# - WRITE Operations (general): 200 requests per 15 minutes per IP
# - Authentication: 5 attempts per 15 minutes per IP
# - Content uploads (pins/boards): 50 uploads per hour per IP (non-GET only)
# - Comments/interactions: 50 per 5 minutes per IP (non-GET only)
# - Messages (write operations): 15 per minute per IP (GET requests use read limit)
# - Users/Notifications: 200 write operations per 15 minutes per IP
# - Rate limits are disabled in test environment
# - Failed requests show retry time in response

# Input Validation Features:
# - XSS protection through input sanitization (escape HTML)
# - Flexible ID validation (MongoDB ObjectId or slug format for pins)
# - Strict MongoDB ID validation for users, boards, messages
# - Malicious content detection (script tags, suspicious patterns)
# - Disposable email blocking for registration
# - Common weak password prevention
# - File upload security validation (type, size, filename)
# - Spam detection in messages and comments
# - Image URL validation (only approved domains allowed)
# - Slug format: lowercase letters, numbers, hyphens (3-100 chars)